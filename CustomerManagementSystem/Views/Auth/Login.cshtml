@model CMS.ViewModels.Auth.LoginViewModel

@using CMS.Localization;
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div class="text-dark-75 text-left">
    <a href="https://netspeed.com.tr/">
        <img src="/Content/assets/media/svg/logos/netspeed.svg" class="max-h-40px" alt="" />
    </a>
    <h3 class="mb-8 mt-10 text-left text-muted font-weight-bold">
        @Common.LoginDescription
    </h3>
    <a href="@Url.Action("DirectLogin","Auth")" class="btn btn-block btn-light-primary py-2 px-9 mt-0 font-weight-bold">@Common.ClickQuickLogin</a>
    <div>
    </div>
    <div class="login-wrapper">
        <div class="login-signin">
            <br>
            <div class="text-left mb-1 mb-lg-1">
                <label class="font-size-h4 font-weight-bolder text-white">@Common.Login</label>
                <p class="text-muted font-size-h5 font-weight-bold">@string.Format(Common.WithCompanyRegisteredPassword, "Netspeed")</p>
            </div>
            @using (Ajax.BeginForm("Login", "Account", new AjaxOptions { HttpMethod = "POST", OnComplete = "LoginResult" }, new { @class = "form text-left" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group py-2 m-0">
                    @Html.EditorFor(m => m.CustomerCode, new { htmlAttributes = new { @class = "form-control h-auto font-size-h5 border-0 px-0 text-dark py-4 px-8 rounded-lg", placeholder = Common.LoginUsernamePlaceholder, autocomplete = "off" } })
                    <div class="fv-plugins-message-container">
                        @Html.ValidationMessageFor(m => m.CustomerCode, null, new { @class = "fv-help-block" })
                    </div>
                </div>
                <div class="form-group py-2  m-0">
                    @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control h-auto font-size-h5 border-0 px-0 text-dark py-4 px-8 rounded-lg", placeholder = Common.PasswordPlaceholder, autocomplete = "off", type = "password" } })
                    <div class="fv-plugins-message-container">
                        @Html.ValidationMessageFor(m => m.Password, null, new { @class = "fv-help-block" })
                    </div>
                </div>
                @*<div class="g-recaptcha" data-sitekey="6LemlQwaAAAAAFqlAuPzuuBF-gF0HrNBeelSS2xJ"></div>*@
                <div class="text-center mt-5">
                    <button type="submit" class="btn btn-block btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3">@Common.Login</button>
                </div>
            }
        </div>
    </div>
</div>
@section scripts{
    <script>
        function LoginResult(data, status) {
            DisableLoadingScreen();
            if (data.responseJSON) {
                var result = data.responseJSON;
                if (result.valid) {
                    swal.fire({
                        icon: 'error',
                        title: '',
                        text: result.valid,
                        buttonsStyling: false,
                        confirmButtonText: "@CMS.Localization.Common.OK",
                        showCancelButton: false,
                        customClass: {
                            confirmButton: "btn font-weight-bold btn-light-primary"
                        },
                    })
                } else {
                    const Toast = swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 1500,
                        timerProgressBar: true
                    })
                    Toast.fire({
                        icon: 'success',
                        title: '@CMS.Localization.Common.LoggingOn'
                    }).then((result) => {
                        $('form').find("button").prop("disabled", "disabled");
                        window.location.href = "/";
                    })
                }

            }
            else {
                $('body').html(data.responseText);
            }
        }
        $('input').keyup(function () {
            $(this).next('div').find('span').text("");
        });

    </script>
}