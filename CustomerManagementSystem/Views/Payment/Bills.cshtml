@model  PagedList.StaticPagedList<CMS.ViewModels.Payment.BillsVM>
@using PagedList.Mvc
@using CMS.Localization;

@{
    ViewBag.Title = CMS.Localization.Common.InvoicePayments;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="flex-row-fluid ">
        <div class="card card-custom card-stretch">
            <div class="card-header py-3">
                <div class="card-title align-items-start flex-column">
                    <h3 class="card-label font-weight-bolder text-dark">@Common.InvoicePayments</h3>
                    <span class="text-muted font-weight-bold font-size-sm mt-1">
                        @Common.InvoicePaymentsDescription
                    </span>
                </div>
                <div class="card-toolbar">
                    <a href="@Url.Action("PaymentInstruction","Payment")" class="btn btn-sm btn-light-info font-weight-bold mr-2">
                        @Common.AutomaticPaymentInstruction
                    </a>
                    <a href="/" class="btn btn-icon btn-sm btn-light-info">
                        <i class="flaticon-home-2"></i>
                    </a>
                </div>
            </div>
        </div>
        <br>
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-xl-3 col-lg-4 col-md-4 col-sm-4">
                    <div class="card card-custom gutter-b card-stretch">
                        <div class="card-body pt-12">
                            <div class="d-flex justify-content-end"></div>
                            <div class="d-flex align-items-center mb-10">
                                <div class="flex-shrink-0 mr-4 mt-lg-0 mt-3">
                                    @if (item.BillStatusTypes == CMS.ViewModels.Payment.BillStatusTypes.Paid)
                                    {
                                        <span class="svg-icon svg-icon-success svg-icon-3x">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                <g stroke="none" stroke-width="1" fill="none"
                                                   fill-rule="evenodd">
                                                    <rect x="0" y="0" width="24" height="24" />
                                                    <rect fill="#000000" opacity="0.3" x="2" y="2" width="20"
                                                          height="20" rx="10" />
                                                    <path d="M6.16794971,14.5547002 C5.86159725,14.0951715 5.98577112,13.4743022 6.4452998,13.1679497 C6.90482849,12.8615972 7.52569784,12.9857711 7.83205029,13.4452998 C8.9890854,15.1808525 10.3543313,16 12,16 C13.6456687,16 15.0109146,15.1808525 16.1679497,13.4452998 C16.4743022,12.9857711 17.0951715,12.8615972 17.5547002,13.1679497 C18.0142289,13.4743022 18.1384028,14.0951715 17.8320503,14.5547002 C16.3224187,16.8191475 14.3543313,18 12,18 C9.64566871,18 7.67758127,16.8191475 6.16794971,14.5547002 Z"
                                                          fill="#000000" />
                                                </g>
                                            </svg>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="svg-icon svg-icon-danger svg-icon-3x">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                <g stroke="none" stroke-width="1" fill="none"
                                                   fill-rule="evenodd">
                                                    <rect x="0" y="0" width="24" height="24" />
                                                    <circle fill="#000000" opacity="0.3" cx="12" cy="12"
                                                            r="10" />
                                                    <rect fill="#000000" x="11" y="10" width="2" height="7"
                                                          rx="1" />
                                                    <rect fill="#000000" x="11" y="7" width="2" height="2"
                                                          rx="1" />
                                                </g>
                                            </svg>
                                        </span>
                                    }

                                </div>
                                <div class="d-flex flex-column">
                                    <a href="#"
                                       class="text-dark font-weight-bold text-hover-primary font-size-h4 mb-0">@Html.DisplayFor(m => item.BeginInvoiceDate) - @Html.DisplayFor(m => item.EndInvoiceDate)</a>
                                    <span class="text-muted font-weight-bold">@Common.InvoicePeriod</span>
                                </div>
                            </div>
                            <div class="mb-7">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(m => item.BillNo)</span>
                                    <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => item.BillNo)</a>
                                </div>
                                <p> </p>
                                <div class="d-flex justify-content-between align-items-cente my-1">
                                    <span class="text-dark-100 font-weight-bolder mr-2">@Html.DisplayNameFor(m => item.BillAmount)</span>
                                    <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => item.BillAmount) ₺</a>
                                </div>
                                <p> </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-dark-75 font-weight-bolder mr-2">
                                        @Html.DisplayNameFor(m => item.IssueDate)
                                    </span>
                                    <span class="text-muted font-weight-bold">@Html.DisplayFor(m => item.IssueDate)</span>
                                </div>
                                <p> </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-dark-75 font-weight-bolder mr-2">
                                        @Html.DisplayNameFor(m => item.DueDate)
                                    </span>
                                    <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => item.DueDate)</a>
                                </div>
                                <p></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-dark-75 font-weight-bolder mr-2">
                                        @Html.DisplayNameFor(m => item.InvoicingPeriod)
                                    </span>
                                    <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => item.InvoicingPeriod)</a>
                                </div>
                            </div>
                            @if (item.BillStatusTypes == CMS.ViewModels.Payment.BillStatusTypes.Paid)
                            {
                                <span class="btn btn-block btn-sm btn-light-success font-weight-bold disabled">
                                    @Common.Paid
                                </span>
                            }
                            else
                            {
                                <a href="@Url.Action("PayBill","Payment")" class="btn btn-block btn-sm btn-danger font-weight-bolder  mr-2">
                                    @Common.QuickPay
                                </a>
                            }

                            <p> </p>
                            <a href="#" class="btn btn-block btn-sm btn-light-primary font-weight-bold ">
                                @Common.DownloadAsPdf
                            </a>
                            <p></p>
                            <a href="#" class="btn btn-block btn-sm btn-light-primary font-weight-bold ">
                                @Common.SendPdfToMail
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="card card-custom">
            <div class="card-body py-7">
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    @if (Model.Count() > 0)
                    {
                        <div id="paged" class="d-flex flex-wrap mr-3">
                            @Html.PagedListPager(Model, page => Url.Action("Bills", new { page, pageSize = Model.PageSize }))
                        </div>
                        <div class="d-flex align-items-center">
                            <span class="text-muted">
                                @string.Format(Common.Pagination, Model.TotalItemCount, Model.FirstItemOnPage, Model.LastItemOnPage)
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        EditPagedList();
    </script>
}