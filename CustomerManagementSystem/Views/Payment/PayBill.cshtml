@model CMS.ViewModels.Payment.PayBillsVM
@using CMS.Localization;

@{
    ViewBag.Title = Common.OnlinePayBill;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="flex-row-fluid ">
        <!--begin::Card-->
        <div class="card card-custom card-stretch">
            <!--begin::Header-->
            <div class="card-header py-3">
                <div class="card-title align-items-start flex-column">
                    <h3 class="card-label font-weight-bolder text-dark">
                        @Common.OnlinePayBill
                    </h3>
                    <span class="text-muted font-weight-bold font-size-sm mt-1">
                        @Common.SecurePaymentPage
                    </span>
                </div>
                <div class="card-toolbar">
                    <a href="@Url.Action("RegisteredCards","Payment")"
                       class="btn btn-sm btn-light-primary font-weight-bold mr-2">
                        @Common.PayWithRegisteredCard
                    </a>
                    <a href="@Url.Action("PaymentInstruction","Payment")"
                       class="btn btn-sm btn-light-info font-weight-bold mr-2">
                        @Common.AutomaticPaymentInstruction
                    </a>
                </div>
            </div>
        </div>
    </div>
    <p></p>
    @using (Ajax.BeginForm("PayBill", "Payment", new AjaxOptions { HttpMethod = "POST", OnComplete = "PayBillResult" }))
    {
        @Html.AntiForgeryToken()
        <div class="card card-custom card-shadowless rounded-top-0">
            <div class="card-body p-0">
                <div class="row justify-content-center py-8 px-8 py-lg-15 px-lg-10">
                    <div class="col-xl-12 col-xxl-7">

                        <div class="row">
                            <div class="fv-plugins-message-container"></div>
                            <div class="fv-plugins-message-container"></div>
                        </div>
                        <h4 class="mb-10 font-weight-bold text-dark">
                            @Common.SetCardInfoes
                        </h4>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group fv-plugins-icon-container">
                                    <label>@Html.DisplayNameFor(m => m.CCFullName)</label>
                                    @Html.EditorFor(m => m.CCFullName, new { htmlAttributes = new { @autocomplete = "off", @class = "form-control form-control-solid form-control-lg", @placeholder = Common.FullName } })
                                    <span class="form-text text-muted">
                                        @Common.SetCardFullName
                                    </span>
                                    <div class="fv-plugins-message-container">
                                        @Html.ValidationMessageFor(m => m.CCFullName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group fv-plugins-icon-container">
                                    <label>@Html.DisplayNameFor(m => m.CCNumber)</label>
                                    @Html.EditorFor(m => m.CCNumber, new { htmlAttributes = new { @class = "form-control form-control-solid form-control-lg", @placeholder = Common.CardNumber, @autocomplete = "off" } })
                                    <span class="form-text text-muted">
                                        @Common.SetCardNumber
                                    </span>
                                    <div class="fv-plugins-message-container"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-4">
                                <!--begin::Input-->
                                <div class="form-group fv-plugins-icon-container">
                                    <label>@Html.DisplayNameFor(m => m.ExpirationMonthId)</label>
                                    @Html.DropDownListFor(m => m.ExpirationMonthId, Model.ExpirationMonthDate, Common.ChooseMonth, new { @class = "form-control form-control-solid form-control-lg" })
                                    <span class="form-text text-muted">
                                        @Common.SetCardExpirationMonth
                                    </span>
                                    <div class="fv-plugins-message-container"></div>
                                </div>
                            </div>
                            <div class="col-xl-4">
                                <div class="form-group fv-plugins-icon-container">
                                    <label>@Html.DisplayNameFor(m => m.ExpirationYearId)</label>
                                    @Html.DropDownListFor(m => m.ExpirationYearId, Model.ExpirationYearDate, Common.ChooseYear, new { @class = "form-control form-control-solid form-control-lg" })
                                    <span class="form-text text-muted">
                                        @Common.SetCardExpirationYear
                                    </span>
                                    <div class="fv-plugins-message-container"></div>
                                </div>
                            </div>
                            <div class="col-xl-4">
                                <div class="form-group fv-plugins-icon-container has-success">
                                    <label>@Html.DisplayNameFor(m => m.CreditSecureCode) </label>
                                    @Html.PasswordFor(m => m.CreditSecureCode, new { @class = "form-control form-control-solid form-control-lg", @placeholder = "CVV" })
                                    <span class="form-text text-muted">
                                        @Common.SetCardSecureCode
                                    </span>
                                    <div class="fv-plugins-message-container"></div>
                                </div>
                            </div>
                        </div>
                        <div class="info-box ">
                            @Html.Raw(Common.PaymentSecureDescription)
                        </div>
                        <div class="row">
                            <div class="col-xl-12">
                                <div class="d-flex justify-content-between border-top mt-5 pt-3">
                                    <div class="mr-1"></div>
                                    <div>
                                        <button onclick="window.location.href = '/Payment/Bills';" type="reset" class="btn btn-light-primary font-weight-bold">
                                            @Common.Cancel
                                        </button>
                                        <button type="submit" class="btn btn-danger font-weight-bold">
                                            @Common.Send
                                        </button>
                                    </div>
                                </div>
                                <div></div>
                                <div></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>
@section scripts{
    @Scripts.Render("~/assets/js/pages/features/miscellaneous/sweetalert2.js")
    <script>
        function PayBillResult(data, status) {
            try {
                if (status == "success") {
                    var response = data.responseJSON;
                    if (!response.valid) {
                        swal.fire({
                            title: 'Lütfen bekleyiniz',
                            text: 'Doğrulama için yönlendiriliyorsunuz',
                            timer: 3000,
                            onOpen: function () {
                                Swal.showLoading()
                            }
                        }).then((result) => {
                            $('button').each(function (e) {
                                $(this).attr("disabled", "disabled");
                            });
                            window.location.href = "/";
                        });
                    }
                    else {
                        swal.fire({
                            icon: 'error',
                            title: '',
                            text: response.valid,
                            confirmButtonText: 'Tamam'
                        })
                    }
                }
            } catch (e) {
                console.log(e);
            }

        }
    </script>
}