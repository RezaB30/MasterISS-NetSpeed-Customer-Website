@model CMS.ViewModels.Supports.SupportMessagesViewModel
@using RezaB.Web.Helpers;
@using CMS.Localization;

@{
    ViewBag.Title = CMS.Localization.Common.SupportAndRequests;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var FileMaxSize = (long)ViewBag.FileMaxSize;
}

<div class="container">
    <div class="flex-row-fluid ">
        <div class="card card-custom card-stretch">
            <div class="card-header py-3">
                <div class="card-title align-items-start flex-column">
                    <h3 class="card-label font-weight-bolder text-dark">@Common.SupportAndRequests</h3>
                    <span class="text-muted font-weight-bold font-size-sm mt-1">
                        @Common.NewRequestDescription
                    </span>
                </div>
                <div class="card-toolbar">
                    <a href="@Url.Action("SupportRequests","Support")" class="btn btn-sm btn-light-info font-weight-bold mr-2">
                        @Common.SupportRecords
                    </a>
                    <a href="/" class="btn btn-icon btn-sm btn-light-info">
                        <i class="flaticon-home-2"></i>
                    </a>
                </div>
            </div>
        </div>
        <br>
        <div class="row">
            <div class="col-xl-4">
                <div class="card card-custom">
                    <div class="card-header h-auto py-4">
                        <div class="card-body pt-15 d-flex flex-column justify-content-between">
                            <div class="d-flex align-items-center mb-7">
                                @if (Model.StateId == (short)CMS.ViewModels.Supports.SupportRequestStateID.Done)
                                {
                                    <div class="flex-shrink-0 mr-4 mt-lg-0 mt-3">
                                        <span class="svg-icon svg-icon-success svg-icon-4x">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                <g stroke="none" stroke-width="1" fill="none"
                                                   fill-rule="evenodd">
                                                    <rect x="0" y="0" width="24" height="24" />
                                                    <rect fill="#000000" opacity="0.3" x="2" y="2"
                                                          width="20" height="20" rx="10" />
                                                    <path d="M6.16794971,14.5547002 C5.86159725,14.0951715 5.98577112,13.4743022 6.4452998,13.1679497 C6.90482849,12.8615972 7.52569784,12.9857711 7.83205029,13.4452998 C8.9890854,15.1808525 10.3543313,16 12,16 C13.6456687,16 15.0109146,15.1808525 16.1679497,13.4452998 C16.4743022,12.9857711 17.0951715,12.8615972 17.5547002,13.1679497 C18.0142289,13.4743022 18.1384028,14.0951715 17.8320503,14.5547002 C16.3224187,16.8191475 14.3543313,18 12,18 C9.64566871,18 7.67758127,16.8191475 6.16794971,14.5547002 Z"
                                                          fill="#000000" />
                                                </g>
                                            </svg>
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    <div class="flex-shrink-0 mr-4 mt-lg-0 mt-3">
                                        <span class="svg-icon svg-icon-warning svg-icon-4x">
                                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                                                <g stroke="none" stroke-width="1" fill="none"
                                                   fill-rule="evenodd">
                                                    <rect x="0" y="0" width="24" height="24" />
                                                    <rect fill="#000000" opacity="0.3" x="2" y="2"
                                                          width="20" height="20" rx="10" />
                                                    <path d="M6.16794971,14.5547002 C5.86159725,14.0951715 5.98577112,13.4743022 6.4452998,13.1679497 C6.90482849,12.8615972 7.52569784,12.9857711 7.83205029,13.4452998 C8.9890854,15.1808525 10.3543313,16 12,16 C13.6456687,16 15.0109146,15.1808525 16.1679497,13.4452998 C16.4743022,12.9857711 17.0951715,12.8615972 17.5547002,13.1679497 C18.0142289,13.4743022 18.1384028,14.0951715 17.8320503,14.5547002 C16.3224187,16.8191475 14.3543313,18 12,18 C9.64566871,18 7.67758127,16.8191475 6.16794971,14.5547002 Z"
                                                          fill="#000000" />
                                                </g>
                                            </svg>
                                        </span>
                                    </div>
                                }

                                <div class="d-flex flex-column">
                                    <a href="#"
                                       class="text-dark font-weight-bold text-hover-primary font-size-h4 mb-0">
                                        @Html.DisplayFor(m => m.SupportRequestName)
                                    </a>
                                    <span class="text-muted font-weight-bold">
                                        @Html.DisplayFor(m => m.SupportRequestSummary)
                                    </span>
                                </div>
                            </div>
                            <div class="pt-0 ">
                                <div class="mb-7">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-dark-75 font-weight-bolder mr-2">
                                            @Html.DisplayNameFor(m => m.SupportNo)
                                        </span>
                                        <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => m.SupportNo)</a>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(m => m.SupportDate)</span>
                                        <a href="#" class="text-muted text-hover-primary">@Html.DisplayFor(m => m.SupportDate)</a>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-cente my-1">
                                        <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(m => m.Department)</span>
                                        <a href="#" class="text-muted text-hover-primary">
                                            @Html.DisplayFor(m => m.Department)
                                        </a>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-dark-75 font-weight-bolder mr-2">@Html.DisplayNameFor(m => m.State)</span>
                                        @if (Model.StateId == (short)CMS.ViewModels.Supports.SupportRequestStateID.Done)
                                        {
                                            <span class="label label-light-success font-weight-bolder label-inline ml-2">@Html.DisplayFor(m => m.State)</span>
                                        }
                                        else
                                        {
                                            <span class="label label-light-warning font-weight-bolder label-inline ml-2">@Html.DisplayFor(m => m.State)</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-toolbar">
                                <a href="@Url.Action("SupportRequests","Support")" class="btn btn-block btn-sm btn-light-primary font-weight-bold text-uppercase ">
                                    @Common.AllSupportRequests
                                </a>
                                <a href="@Url.Action("NewRequests","Support")" class="btn btn-block btn-sm btn-light-info font-weight-bold text-uppercase ">
                                    @Common.NewRequest
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-8">
                <div class="card card-custom gutter-b">
                    <div class="card-body px-0">
                        <div class="tab-content pt-5">
                            <div class="tab-pane active" id="kt_apps_contacts_view_tab_1" role="tabpanel">
                                <div class="container">
                                    @if (Model.SupportDisplayType == CMS.ViewModels.Supports.SupportRequestDisplayTypes.AddNoteDisplay)
                                    {
                                        using (Html.BeginForm("NewSupportMessage", "Support", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.HiddenFor(m => m.ID)
                                            <div class="form-group">
                                                @Html.TextAreaFor(m => m.Message, new { @placeholder = Common.WriteNote, @maxlength = "250", @class = "form-control form-control-lg form-control-solid", @rows = 3 })
                                                @if (ViewBag.CanSendFile)
                                                {
                                                    <div class="mt-1" style="color:mediumpurple">
                                                        @string.Format(Errors.FileSizeError, (FileMaxSize / 1000000))
                                                    </div>
                                                }
                                            </div>
                                            <div class="row">
                                                <div class="col">
                                                    <button type="button" onclick="FormSubmit(submitType.SOLVED);" class="btn btn-sm btn-light-success font-weight-bold">
                                                        @Common.ProblemSolved
                                                    </button>
                                                    <button type="button" onclick="FormSubmit(submitType.ADD);" class="btn btn-sm btn-light-danger font-weight-bold">
                                                        @Common.Send
                                                    </button>
                                                    @if (ViewBag.CanSendFile)
                                                    {
                                                        <span class="btn btn-icon btn-sm btn-clean mr-2 dz-clickable" id="support-attachment-id">
                                                            <i class="flaticon2-clip-symbol"></i>
                                                        </span>
                                                        <input class="upload-attachments" name="attachments" type="file" style="visibility:hidden;" multiple />
                                                        <ul class="list upload-attachment-list list-unstyled mt-2"></ul>
                                                    }

                                                </div>
                                            </div>
                                        }
                                        <div class="separator separator-dashed my-10"></div>
                                    }
                                    @if (Model.SupportDisplayType == CMS.ViewModels.Supports.SupportRequestDisplayTypes.OpenRequestAgainDisplay)
                                    {
                                        using (Html.BeginForm("NewSupportMessage", "Support", FormMethod.Post, new { @class = "form" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.HiddenFor(m => m.ID)
                                            <div class="form-group">
                                                @Html.TextAreaFor(m => m.Message, new { @placeholder = Common.WriteNote, @maxlength = "250", @class = "form-control", @rows = 3 })
                                            </div>
                                            <div class="row">
                                                <div class="col">
                                                    <button type="button" onclick="FormSubmit(submitType.SOLVED);" class="btn btn-sm btn-light-success font-weight-bold">
                                                        @Common.ProblemSolved
                                                    </button>
                                                    <button type="button" onclick="FormSubmit(submitType.OPEN);" class="btn btn-sm btn-light-danger font-weight-bold">
                                                        @Common.OpenRequestAgain
                                                    </button>
                                                </div>
                                            </div>
                                        }
                                        <div class="separator separator-dashed my-10"></div>
                                    }
                                    <div class="timeline timeline-3">
                                        <div class="timeline-items">
                                            <div class="timeline timeline-3">
                                                <div class="timeline-items">
                                                    @foreach (var item in Model.SupportMessageList.OrderByDescending(m => m.MessageDate))
                                                    {
                                                        <div class="timeline-item">
                                                            <div class="timeline-media">
                                                                @if (item.IsCustomer)
                                                                {
                                                                    <img alt="Pic" src="/Content/assets/media/users/default.jpg">
                                                                }
                                                                else
                                                                {
                                                                    <img alt="Pic" src="/Content/assets/media/users/52755289_772618326428147_6148716253725851648_n.png">
                                                                }
                                                            </div>
                                                            <div class="timeline-content">
                                                                <div class="d-flex align-items-center justify-content-between mb-3">
                                                                    <div class="mr-2">
                                                                        <a href="#"
                                                                           class="text-dark-75 text-hover-primary font-weight-bold">
                                                                            @Html.DisplayFor(m => item.SenderName)
                                                                        </a>
                                                                        <span class="text-muted ml-2">
                                                                            @Html.DisplayFor(m => item.MessageDate)
                                                                        </span>
                                                                        @if (!item.IsCustomer)
                                                                        {
                                                                            if (Model.StateId == (short)CMS.ViewModels.Supports.SupportRequestStateID.Done)
                                                                            {
                                                                                <span class="label label-light-success font-weight-bolder label-inline ml-2">@Common.Completed</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="label label-light-warning font-weight-bolder label-inline ml-2">@Common.InProcess</span>
                                                                            }
                                                                        }
                                                                    </div>
                                                                </div>
                                                                <p class="p-0">
                                                                    @Html.DisplayFor(m => item.Message)
                                                                </p>
                                                                <div data-stage="@item.StageId" class="d-flex flex-column font-size-sm font-weight-bold support-file-content">

                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/Content/assets/js/pages/custom/todo/todo.js")
    @Scripts.Render("~/Content/assets/js/pages/features/miscellaneous/sweetalert2.js")
    @Scripts.Render("~/Scripts/Custom/display-message-box.js")
    @Scripts.Render("~/Scripts/Custom/support-attachment.js")
    <script>
        const submitType = {
            SOLVED: 'solved',
            ADD: 'add',
            OPEN: 'open'
        }
        function FormSubmit(_type) {
            if (_type == submitType.ADD) {
                $('#IsSolved').remove();
                $('#ForOpenRequest').remove();
                $('form.form').append('<input id="ForAddNote" name="ForAddNote" type="hidden" value="True">');
                $('form.form').submit();
            }
            if (_type == submitType.SOLVED) {
                $('#ForOpenRequest').remove();
                $('#ForAddNote').remove();
                $('form.form').append('<input id="IsSolved" name="IsSolved" type="hidden" value="True">');
                $('form.form').submit();
            }
            if (_type == submitType.OPEN) {
                $('#IsSolved').remove();
                $('#ForAddNote').remove();
                $('form.form').append('<input id="ForOpenRequest" name="ForOpenRequest" type="hidden" value="True">');
                $('form.form').submit();
            }
        }
        GetSupportAttachments('@Url.Action("GetSupportAttachments","Support")', '@Model.ID', '@Url.Action("DownloadSupportAttachment","Support")');
    </script>
}